import SwiftUI

struct WordScrambleView: View {
    @State private var words = [
        "apple", "banana", "chocolate", "elephant", "giraffe",
        "computer", "mountain", "puzzle", "universe", "astronaut"
    ]
    @State private var scrambledWord = ""
    @State private var userAnswer = ""
    @State private var score = 0
    @State private var currentWord = ""

    var body: some View {
        ZStack {
            // Background color
            Color(red: 0.64, green: 0.45, blue: 0.28) // Woody brown color
                .edgesIgnoringSafeArea(.all)

            VStack(spacing: 20) {
                Text("Word Scramble")
                    .font(.largeTitle)
                    .bold()
                    .foregroundColor(.white)

                Text("Unscramble this word:")
                    .font(.headline)
                    .foregroundColor(.white)

                Text(scrambledWord)
                    .font(.title)
                    .bold()
                    .padding()
                    .background(Color.white.opacity(0.2))
                    .cornerRadius(10)

                TextField("Your Answer", text: $userAnswer)
                    .textFieldStyle(RoundedBorderTextFieldStyle())
                    .padding()
                    .background(Color.white.opacity(0.3))
                    .cornerRadius(10)

                Button("Check Answer") {
                    checkAnswer()
                }
                .padding()
                .background(Color.blue)
                .foregroundColor(.white)
                .cornerRadius(10)

                Text("Score: \(score)")
                    .font(.title2)
                    .bold()
                    .foregroundColor(.white)

                Button("Next Word") {
                    nextWord()
                }
                .padding()
                .background(Color.green)
                .foregroundColor(.white)
                .cornerRadius(10)
            }
            .padding()
        }
        .onAppear {
            nextWord()
        }
    }

    private func nextWord() {
        if words.isEmpty {
            scrambledWord = "Game Over!"
            return
        }

        currentWord = words.removeFirst()
        scrambledWord = String(currentWord.shuffled()) // Scramble word
        userAnswer = "" // Clear input field
    }

    private func checkAnswer() {
        if userAnswer.lowercased() == currentWord.lowercased() {
            score += 1
        }
        nextWord()
    }
}

struct WordScrambleView_Previews: PreviewProvider {
    static var previews: some View {
        WordScrambleView()
    }
}
